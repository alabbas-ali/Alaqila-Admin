<script src="<?php echo $this->basePath('js/jquery.cropit.js'); ?>"></script>
<link href="<?php echo $this->basePath('css/uplode-center.css'); ?>" rel="stylesheet" type="text/css"/>

<div class="modal-dialog uplodeModal">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            <h4 class="modal-title">Media</h4>
        </div>
        <div class="modal-body">
            <div class="row">
                <div class="col-md-12">
                    <!-- Custom Tabs -->
                    <div id="error" style="display: none" class="callout callout-danger"></div>
                    <div class="nav-tabs-custom">
                        <ul class="nav nav-tabs">
                            <li class="active"><a href="#tab_1" data-toggle="tab">Media Library</a></li>
                            <li><a href="#tab_2" data-toggle="tab">Upload</a></li>
                        </ul>
                        <div class="tab-content">
                            <div class="tab-pane active clearfix filesdisplaytab" id="tab_1">

                            </div><!-- /.tab-pane -->

                            <div class="tab-pane" id="tab_2">

                                <button class="btn btn-primary" id="file_upload_file">File Upload (Audio & Video)</button>
                                <button class="btn btn-primary" id="file_upload_image">Image Upload</button>

                                <?php $form->setAttribute('action', $this->url('Myuploads')); ?>
                                <?php $form->prepare(); ?>
                                <?php echo $this->form()->openTag($form); ?>
                                <?php echo $this->formFileApcProgress(); // Must come before the file input! ?>
                                <?php //echo $this->formFileSessionProgress(); // Must come before the file input! ?>

                                <div class="form-element">
                                    <?php $fileElement = $form->get('file'); ?>
                                    <?php echo $this->formLabel($fileElement); ?>
                                    <?php echo $this->formFile($fileElement); ?>
                                    <?php echo $this->formElementErrors($fileElement); ?>

                                    <button>Submit</button>
                                </div>


                                <?php echo $this->form()->closeTag(); ?>

                                <div class="image-editor" id="image-editor" style="display: none">
                                    <input type="file" style="visibility: hidden" class="cropit-image-input" />
                                    <div class="btn btn-dropbox select-image-btn">Select new image</div>
                                    <div class="cropit-image-preview-container">
                                        <div class="cropit-image-preview">
                                            <div class="spinner">
                                                <ul class="loader">
                                                    <li>
                                                        <div class="circle"></div>
                                                        <div class="ball"></div>
                                                    </li>
                                                </ul>
                                            </div>
                                        </div>
                                        
                                        <div class="slider-wrapper">
                                            <span class="fa fa-image" style="float: left;padding: 20px"></span>
                                            <input type="range" style="float: left;max-width: 250px;padding: 10px;" class="cropit-image-zoom-input custom" min="0" max="1" step="0.01">
                                            <span class="fa fa-image" style="font-size: 25px;padding: 10px"></span>
                                        </div>
                                    </div>
                                    <div class="btns">
                                        <button id="image_uplode">Submit</button>
                                    </div>
                                </div>

                                <div id="progress" class="progress progress-sm active">
                                    <div class="bar progress-bar progress-bar-primary progress-bar-striped" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">
                                        <span class="sr-only">20% Complete</span>
                                    </div>
                                </div>

                                <div id="finishuplode" class="finishuplode"></div>


                            </div><!-- /.tab-pane -->
                        </div><!-- /.tab-content -->
                    </div><!-- nav-tabs-custom --> 
                </div><!-- /.col -->
            </div>
        </div>
        <div class="modal-footer">
            <div id="selecteLable" style="font-size: 10px;float: left"></div>
            <button class="btn btn-primary" onclick="Select();">Select</button>
            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        </div>
    </div>
    <!-- /.modal-content -->
</div>
<!-- /.modal-dialog -->

<script type="text/javascript" >
    var page = 1;
    var end = false;
    var selectedFile = "";

    $('.image-editor').cropit({imageBackground: true});
    $('.image-editor').cropit('previewSize', {width: 350, height: 175});

    //$('.image-editor').cropit('onImageLoading',function(){
    //alert('start loding ');
    //$('.spinner').css('opacity' , 1);
    //});
    // When user clicks select image button,
    // open select file dialog programmatically
    $('.select-image-btn').click(function () {
        $('.cropit-image-input').click();
    });

    $('#file_upload_file').click(function () {
        $('#image-editor').hide(100);
        $('#file-form').show(150);
    });

    $('#file_upload_image').click(function () {
        $('#file-form').hide(100);
        $('#image-editor').show(150);
    });
    function call() {
        if (!end) {
            $.ajax({
                url: "<?php echo $this->url('Myuploads', array('action' => 'filesdisplay')); ?>/" + page,
                success: function (data) {
                    $("#tab_1").append(data.files);
                    if (data.filesnum == 0)
                        end = true;
                }
            });
        }
    }
    function call2() {
        if (!end) {
            $.ajax({
                url: "<?php echo $this->url('Myuploads', array('action' => 'filesdisplay')); ?>/" + page,
                success: function (data) {
                    $("#tab_1").html(data.files);
                    if (data.filesnum == 0)
                        end = true;
                }
            });
        }
    }
    call();
    $('#tab_1').bind('scroll', function () {
        if ($(this).scrollTop() + $(this).innerHeight() >= $(this)[0].scrollHeight) {
            page++;
            call();
        }
    });

    function selecteOneFile(selected) {
        var el = selected.parentNode.parentNode;
        selectedFile = selected.src;
        $('#selecteLable').html(selectedFile);
        $('.thumbnail').removeClass('selected');
        if (el) {
            el.className += el.className ? ' selected' : 'selected';
        }
    }

    function deleteFile(selected) {
        var strings = selected.split('/');
        var file = strings[strings.length - 1];
        bootbox.confirm("Pleas Note That The File Will Not Be Any More Avalable , Are you sure?",
                function (result) {
                    if (result) {
                        $.post(
                                "<?php echo $this->url('Myuploads', array('action' => 'fileDelete')); ?>",
                                {file: file},
                        function (data) {
                            if (data.done == 'true') {
                                call2();
                            } else {
                                $('#error').html('<h4>Error In Submit!</h4><p>' + data.message + '</p>');
                                $('#error').show(150);
                            }
                        }
                        );
                    }
                });
    }

    function Select() {
        $('#' + $('#parentName').val()).val(selectedFile);
        $("#MediaLibraryModal").modal("hide");
    }

    var progressInterval;
    $("#progress").hide();
    function getProgress() {
        // Poll our controller action with the progress id
        var url = '<?php echo $this->url('Myuploads', array('action' => 'upload-progress')); ?>/' + $('#progress_key').val();
        $.getJSON(url, function (data) {
            /*
             var items = [];
             $.each( data, function( key, val ) {
             items.push( "<li id='" + key + "'>" + val + "</li>" );
             });
             */
            //alert(data.current);
            if (!data.done) {
                var value = Math.floor((data.current / data.total) * 100);
                showProgress(value, 'Uploading...');
            } else {
                showProgress(100, 'Complete!');
                clearInterval(progressInterval);
                //$('').html('File Has Been Upluded ...');
                $("#tab_1").empty();
                end = false;
                page = 1;
                call2();
            }
        });
    }

    function startProgress() {
        showProgress(0, 'Starting upload...');
        progressInterval = setInterval(getProgress, 900);
    }

    function showProgress(amount, message) {
        $('#progress').show();
        $('#progress .bar').width(amount + '%');
        $('#finishuplode').html(message);
        if (amount < 100) {
            $('#progress .progress').addClass('progress-info active')
                    .removeClass('progress-success');
        } else {
            $('#progress .progress').removeClass('progress-info active')
                    .addClass('progress-success');
            $("#progress").hide();
            $('#progress .bar').width('0%');
        }
    }

    $(function () {

        $('#image_uplode').on('click', function () {
            //e.preventDefault();
            var imageData = $('.image-editor').cropit('export', {
                type: 'image/jpeg',
                quality: .9,
                originalSize: true
            });

            //$('.hidden-image-data').val(imageData);
            //alert(imageData);

            var blob = dataURItoBlob(imageData);
            var fd = new FormData(document.getElementById('file-form'));
            var request = new XMLHttpRequest();
            fd.append("file", blob, "filename.jpg");
            request.open("POST", "<?php echo $this->url('Myuploads'); ?>", true);
            request.send(fd);
            startProgress();
        });

        // Register a 'submit' event listener on the form to perform the AJAX POST
        $('#file-form').on('submit', function (e) {

            e.preventDefault();


            //$('#file').files[0] = ;

            if ($('#file').val() == '') {
                //No files selected, abort
                return;
            }

            // Perform the submit
            //$.fn.ajaxSubmit.debug = true;
            $(this).ajaxSubmit({
                beforeSubmit: function (arr, $form, options) {
                    // Notify backend that submit is via ajax
                    arr.push({name: "isAjax", value: "1"});
                },
                success: function (response, statusText, xhr, $form) {
                    clearInterval(progressInterval);
                    showProgress(100, 'Complete!');

                    // TODO: You'll need to do some custom logic here to handle a successful
                    // form post, and when the form is invalid with validation errors.
                    if (response.status) {
                        // TODO: Do something with a successful form post, like redirect
                        // window.location.replace(response.redirect);
                    } else {
                        // Clear the file input, otherwise the same file gets re-uploaded
                        // http://stackoverflow.com/a/1043969
                        var fileInput = $('#file');
                        fileInput.replaceWith(fileInput.val('').clone(true));

                        // TODO: Do something with these errors
                        // showErrors(response.formErrors);
                        if (response.formErrors) {
                            $('#error').html('<h4>Error In Submit!</h4><p>' + response.formErrors + '</p>');
                            $('#error').show(150);
                        }
                    }
                },
                error: function (a, b, c) {
                    // NOTE: This callback is *not* called when the form is invalid.
                    // It is called when the browser is unable to initiate or complete the ajax submit.
                    // You will need to handle validation errors in the 'success' callback.
                    console.log(a, b, c);
                }
            });
            // Start the progress polling
            startProgress();
        });
    });

    function dataURItoBlob(dataURI) {
        // convert base64/URLEncoded data component to raw binary data held in a string
        var byteString;
        if (dataURI.split(',')[0].indexOf('base64') >= 0)
            byteString = atob(dataURI.split(',')[1]);
        else
            byteString = unescape(dataURI.split(',')[1]);

        // separate out the mime component
        var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];

        // write the bytes of the string to a typed array
        var ia = new Uint8Array(byteString.length);
        for (var i = 0; i < byteString.length; i++) {
            ia[i] = byteString.charCodeAt(i);
        }

        return new Blob([ia], {type: mimeString});
    }
</script>
